spring:
  application:
    name: account-service
  cloud:
    stream:
      kafka:
        bindings:
          output:
            producer:
              configuration:
                key:
                  serializer: org.apache.kafka.common.serialization.StringSerializer
      bindings:
        input:
          group: ${spring.application.name}
          destination: account
          contentType: application/*+avro
        inputFraudulent:
          group: ${spring.application.name}
          destination: fraudulent-transfer
          contentType: application/*+avro
      schema-registry-client:
        endpoint: http://localhost:8081
      schema:
        avro:
          subjectNamingStrategy: org.springframework.cloud.stream.schema.avro.QualifiedSubjectNamingStrategy
  datasource:
    url: jdbc:postgresql://localhost:5432/postgres
    username: postgres
    password: mysecretpassword
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQL82Dialect
    hibernate:
      ddl-auto: update

sqllite:
  datasource:
    url: jdbc:sqlite:test.db
    driver-class-name: org.sqlite.JDBC
    username: sa
    password: sa
